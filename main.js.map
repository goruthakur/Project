{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addmember/addmember.component.css","webpack:///./src/app/addmember/addmember.component.html","webpack:///./src/app/addmember/addmember.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/data-table/data-table-datasource.ts","webpack:///./src/app/data-table/data-table.component.css","webpack:///./src/app/data-table/data-table.component.html","webpack:///./src/app/data-table/data-table.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/members/member-filter.pipe.ts","webpack:///./src/app/members/members.component.css","webpack:///./src/app/members/members.component.html","webpack:///./src/app/members/members.component.ts","webpack:///./src/app/products/products.component.css","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.ts","webpack:///./src/app/reporting/reporting.component.css","webpack:///./src/app/reporting/reporting.component.html","webpack:///./src/app/reporting/reporting.component.ts","webpack:///./src/app/services/backend.service.ts","webpack:///./src/app/shared/material/material.module.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".float-right {\\r\\n    margin-right: 125px;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <app-header></app-header>\\n  \\n<div class=\\\"container\\\">\\n  <br><br>\\n  <h2 class=\\\"float-left\\\">Add Member</h2><a routerLink='/members'><button class=\\\"btn btn-danger float-right\\\">Back</button></a>\\n  <br><br><br>\\n  <form class=\\\"form-horizontal\\\" #productData=\\\"ngForm\\\" (ngSubmit)=\\\"submitMember(productData.value)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"name\\\">Name:</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Enter Name\\\" name=\\\"name\\\"ngModel>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-10\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <label>First Section:</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"first\\\" name=\\\"first\\\" ngModel><br>\\n                    <label>Third Section:</label> <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"second\\\"  name=\\\"second\\\" ngModel><br>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <label>Second Section:</label> <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"third\\\"  name=\\\"third\\\" ngModel><br>\\n                    <label>Fourth Section:</label><input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"fourth\\\"  name=\\\"fourth\\\" ngModel>\\n                </div>\\n              </div>\\n        </div>\\n      </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-2\\\" for=\\\"joindate\\\">Join Date:</label>\\n      <div class=\\\"col-sm-10\\\">          \\n        <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"joindate\\\" placeholder=\\\"Enter Join Date\\\" name=\\\"joindate\\\" ngModel>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">        \\n      <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <div class=\\\"checkbox\\\">\\n          <label><input type=\\\"checkbox\\\" name=\\\"isActive\\\" ngModel> Is Active</label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">        \\n      <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n</div>\\n\\n<br>\\n<h3 *ngIf=\\\"isAdded\\\">{{confirm}}</h3>\\n{{error}}\"","import { Component, OnInit } from '@angular/core';\nimport { BackendService } from '../services/backend.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport data from './../shared/data/data.json';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-addmember',\n  templateUrl: './addmember.component.html',\n  styleUrls: ['./addmember.component.css']\n})\nexport class AddmemberComponent implements OnInit {\n\n  name: any;\n  joinDate: any;\n  isActive: any;\n  error: string;\n  constructor(private http: HttpClient) { }\n  memberObj:object={};\n  confirm:string =\"New Product is added\";\n  isAdded: boolean = false;\n  ngOnInit() {\n\n  }\n\n  submitMember= function(member) {\n    /*   return this.backendservice.addNewMember(this.members).subscribe(\n        data=> this.members.push(data),\n        error => this.error =error\n      ); */\n      \n    let addmemberObj = {\n      \"name\": member.name,\n      \"joinDate\": member.joinDate,\n      \"isActive\": member.isActive\n    }\n\n    alert(addmemberObj.name);\n    this.http.post('http://localhost:3000/members/',this.memberObj).subscribe((res: Response) => {\n      console.log(res.json);\n      alert(res.json);\n      this.isAdded = true;\n    })\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angulartask';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule }    from '@angular/forms';\nimport { FormsModule }   from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { routing }        from './app.routing';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MembersComponent } from './members/members.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ReportingComponent } from './reporting/reporting.component';\nimport { UsersComponent } from './users/users.component';\nimport { DataTableComponent } from './data-table/data-table.component';\nimport { MatTableModule, MatPaginatorModule, MatSortModule } from '@angular/material';\nimport {MaterialModule} from './shared/material/material.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BackendService } from './services/backend.service';\nimport { AddmemberComponent } from './addmember/addmember.component';\nimport { MemberFilterPipe } from './members/member-filter.pipe';\nimport { NgxPaginationModule } from 'ngx-pagination';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HeaderComponent,\n    FooterComponent,\n    DashboardComponent,\n    MembersComponent,\n    ProductsComponent,\n    ReportingComponent,\n    UsersComponent,\n    DataTableComponent,\n    AddmemberComponent,\n    MemberFilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    routing,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MaterialModule,\n    HttpClientModule,\n    NgxPaginationModule\n\n  ],\n  providers: [BackendService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent} from './dashboard/dashboard.component';\r\nimport { UsersComponent} from './users/users.component';\r\nimport { MembersComponent } from './members/members.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { ReportingComponent } from './reporting/reporting.component';\r\nimport { AddmemberComponent } from './addmember/addmember.component';\r\nconst appRoutes: Routes = [\r\n    { path: '', component: LoginComponent},\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'dashboard', component: DashboardComponent},\r\n    {path: 'users', component:UsersComponent},\r\n    {path: 'products', component:ProductsComponent},\r\n    {path: 'reporting', component:ReportingComponent},\r\n    {path: 'members', component: MembersComponent},\r\n    {path: 'addmember', component:AddmemberComponent},\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <app-header></app-header>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface DataTableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: DataTableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the DataTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class DataTableDataSource extends DataSource<DataTableItem> {\n  data: DataTableItem[] = EXAMPLE_DATA;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<DataTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginator's length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: DataTableItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: DataTableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \".full-width-table {\\n  width: 100%;\\n}\\n\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table class=\\\"full-width-table\\\" [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator #paginator\\n      [length]=\\\"dataSource.data.length\\\"\\n      [pageIndex]=\\\"0\\\"\\n      [pageSize]=\\\"50\\\"\\n      [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { DataTableDataSource } from './data-table-datasource';\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.css'],\n})\nexport class DataTableComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: DataTableDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new DataTableDataSource(this.paginator, this.sort);\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  footer works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand text-secondary\\\">Admin Section</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarText\\\" aria-controls=\\\"navbarText\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarText\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/members\\\" routerLinkActive=\\\"active\\\">Members</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/products\\\" routerLinkActive=\\\"active\\\">Products</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/reporting\\\" routerLinkActive=\\\"active\\\">Reporting</a>      \\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/users\\\" routerLinkActive=\\\"active\\\">Users</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li><a class=\\\"nav-link\\\" routerLink=\\\"/users\\\" routerLinkActive=\\\"active\\\">Admin</a></li>\\n        <li><a class=\\\"nav-link\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Logout</a></li>\\n    </ul>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".btn-success {\\r\\n    margin-left: 44px;\\r\\n}\\r\\n\\r\\n.container{\\r\\n    height: 400px;\\r\\n}\\r\\n\\r\\n.invalid-feedback{\\r\\n   padding-left: 39px;\\r\\n}\\r\\n\\r\\n.btn-success{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n@media(min-width: 768px) {\\r\\n    .field-label-responsive {\\r\\n      padding-top: .5rem;\\r\\n      text-align: right;\\r\\n    }\\r\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n    <form class=\\\"form-horizontal\\\" name=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"form.valid && onSubmit()\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"col-md-6\\\">\\n                <h2>Please Login</h2>\\n                <hr>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3 field-label-responsive\\\">\\n                <label for=\\\"email\\\">E-Mail Address</label>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-at\\\"></i></div>\\n                        <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                        id=\\\"email\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{'is-invalid': form.get('email').touched && form.get('email').invalid}\\\"\\n                         autofocus>\\n                         <div *ngIf=\\\"form.get('email').touched && form.get('email').invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"form.get('email').errors.required\\\">Email is required</div>\\n                        <div *ngIf=\\\"form.get('email').errors.email\\\">Email must be a valid email address</div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3 field-label-responsive\\\">\\n              <label for=\\\"password\\\">Password</label>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                  <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n                      <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\n                      <input type=\\\"text\\\" name=\\\"password\\\" class=\\\"form-control\\\"\\n                      id=\\\"password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{'is-invalid': form.get('password').touched && form.get('password').invalid}\\\"\\n                       autofocus>\\n                       <div *ngIf=\\\"form.get('password').touched && form.get('password').invalid\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"form.get('password').errors.required\\\">Password is required</div>\\n                      <div *ngIf=\\\"form.get('password').errors.minlength\\\">Password must be a latest 6 charector</div>\\n                      </div>\\n                  </div>\\n              </div>\\n          </div>\\n      </div>\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"col-md-6\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-success\\\">Submit</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router} from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('',[Validators.required, Validators.minLength(6)])\n  })\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    \n  }\n\n  onSubmit(){\n   \n    var email = this.form.get('email').value;\n    var password = this.form.get('password').value;\n    //alert(email);\n    if(email== 'admin@gmail.com' && password=='admin@123')\n    this.router.navigate(['members']);\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'search'\r\n})\r\nexport class MemberFilterPipe implements PipeTransform {\r\n  public transform(value, keys: string, term: string) {\r\n\r\n    if (!term) return value;\r\n    return (value || []).filter((members) => keys.split(',').some(key => members.hasOwnProperty(key) && new RegExp(term, 'gi').test(members[key])));\r\n\r\n  }\r\n}","module.exports = \"/* Structure */\\r\\ntable {\\r\\n    width: 100%;\\r\\n  }\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n  }\\r\\nth.section{\\r\\n  text-align: center;\\r\\n  font-size: 20px;\\r\\n  }\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <app-header></app-header>\\n  <div class=\\\"container\\\">\\n      <h1>Data table</h1>\\n      <div class=\\\"col-sm-4 float-left\\\" ng-app=\\\"myapp\\\" ng-controller=\\\"charactersCtrl\\\">\\n        <input class=\\\"form-control\\\" id=\\\"myInput\\\" type=\\\"text\\\" [(ngModel)]=\\\"query\\\" placeholder=\\\"Search..\\\">\\n      </div>\\n    <div class=\\\"col-sm-4\\\"></div>\\n    <div class=\\\"col-sm-4 float-right\\\"><a routerLink='/addmember'><button class=\\\"btn btn-success\\\">Create a new Member</button></a></div>\\n      <br>\\n      <br>\\n      <table class=\\\"table table-striped table-bordered table-hover\\\" id=\\\"mydata\\\">\\n        <thead>\\n          <tr>\\n            <th rowspan=\\\"2\\\">ID</th>\\n            <th rowspan=\\\"2\\\">Name</th>\\n            <th colspan=\\\"4\\\" class=\\\"section\\\">Sections</th>\\n            <th rowspan=\\\"2\\\">Join Date</th>\\n            <th rowspan=\\\"2\\\">Status</th>\\n            <th rowspan=\\\"2\\\"></th>\\n          </tr>\\n          <tr>\\n              <td>1st</td>\\n              <td>2nd</td>\\n              <td>3rd</td>\\n              <td>4th</td>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let member of members | search:'id,text,email,name':query |paginate: { itemsPerPage: 5, currentPage: p }\\\">\\n          <td>{{member.id}}</td>\\n          <td>{{member.name}}</td>\\n          <td>{{member.first}}</td>\\n          <td>{{member.second}}</td>\\n          <td>{{member.third}}</td>\\n          <td>{{member.fourth}}</td>\\n          <td>{{member.join_date}}</td>\\n          <td>{{member.status}}</td>\\n          <td><a routerLink=\\\"/members/{{member.id}}\\\">edit</a></td>\\n        </tr>\\n        </tbody>\\n      </table>\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n    </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BackendService } from '../services/backend.service';\n@Component({\n  selector: 'app-members',\n  templateUrl: './members.component.html',\n  styleUrls: ['./members.component.css']\n})\nexport class MembersComponent implements OnInit {\n\n  public members: Array<object> = [];\n  serachTerm : string;\n  p:number = 1;\n  title: string;\n  query:string;\n  constructor(private backendservice : BackendService) { }\n\n  ngOnInit() {\n    this.getConfig();\n  }\n\n  public getConfig(){\n    this.backendservice.getConfig().subscribe((data: Array<object>)=>{\n      this.members = data;\n      console.log(data);\n    });\n  }\n\n  public edit(obj){\n    this.title = 'update';\n \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <app-header></app-header>\\n  </div>\\n  <div class=\\\"container\\\">\\n      <div class=\\\"panel-group\\\">\\n        <div class=\\\"panel panel-default\\\">\\n          <div class=\\\"panel-heading text-primary\\\"><h1>Angular</h1></div>\\n          <div class=\\\"panel-body\\\">\\n              Angular 4 is a JavaScript framework for building web applications and apps in JavaScript, html,\\n              and TypeScript, which is a superset of JavaScript. Angular provides built-in features for animation,\\n              http service, and materials which in turn has features such as auto-complete, navigation, toolbar,\\n              menus, etc.The code is written in TypeScript, which compiles to JavaScript and displays the same in\\n              the browser.\\n          </div>\\n        </div>\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading text-primary\\\"><h1>Javascript</h1></div>\\n            <div class=\\\"panel-body\\\">\\n                JavaScript is a lightweight, interpreted programming language. It is designed for creating \\n                network-centric applications. It is complimentary to and integrated with Java.\\n                 JavaScript is very easy to implement because it is integrated with HTML.\\n                 It is open and cross-platform.\\n            </div>\\n        </div>\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading text-primary\\\"><h1>HTML</h1></div>\\n            <div class=\\\"panel-body\\\">\\n                HTML stands for Hyper Text Markup Language, which is the most widely\\n                 used language on Web to develop web pages. HTML was created by Berners-\\n                  in late 1991 but \\\"HTML 2.0\\\" was the first standard HTML specification \\n                   was published in 1995. HTML 4.01 was a major version of HTML and it was\\n                    published in late 1999. Though HTML 4.01 version is widely used but currently\\n                 we are having HTML-5 version which is an extension to HTML 4.01, and this \\n                  was published in 2012.\\n            </div>\\n        </div>\\n      </div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <app-header></app-header>\\n  </div>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"panel-group\\\">\\n          <div class=\\\"panel panel-default\\\">\\n              <div class=\\\"panel-heading text-primary\\\"><h1>HTML</h1></div>\\n              <div class=\\\"panel-body\\\">\\n                  HTML stands for Hyper Text Markup Language, which is the most widely\\n                   used language on Web to develop web pages. HTML was created by Berners-\\n                    in late 1991 but \\\"HTML 2.0\\\" was the first standard HTML specification \\n                     was published in 1995. HTML 4.01 was a major version of HTML and it was\\n                      published in late 1999. Though HTML 4.01 version is widely used but currently\\n                   we are having HTML-5 version which is an extension to HTML 4.01, and this \\n                    was published in 2012.\\n              </div>\\n          </div>\\n          <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading text-primary\\\"><h1>Angular</h1></div>\\n            <div class=\\\"panel-body\\\">\\n                Angular 4 is a JavaScript framework for building web applications and apps in JavaScript, html,\\n                and TypeScript, which is a superset of JavaScript. Angular provides built-in features for animation,\\n                http service, and materials which in turn has features such as auto-complete, navigation, toolbar,\\n                menus, etc.The code is written in TypeScript, which compiles to JavaScript and displays the same in\\n                the browser.\\n            </div>\\n          </div>\\n          <div class=\\\"panel panel-default\\\">\\n              <div class=\\\"panel-heading text-primary\\\"><h1>Javascript</h1></div>\\n              <div class=\\\"panel-body\\\">\\n                  JavaScript is a lightweight, interpreted programming language. It is designed for creating \\n                  network-centric applications. It is complimentary to and integrated with Java.\\n                   JavaScript is very easy to implement because it is integrated with HTML.\\n                   It is open and cross-platform.\\n              </div>\\n          </div>\\n        </div>\\n      </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reporting',\n  templateUrl: './reporting.component.html',\n  styleUrls: ['./reporting.component.css']\n})\nexport class ReportingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackendService {\n  configUrl = 'http://localhost:3000/members';\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': 'my-auth-token'\n    })\n  };\n  handleError: any;\n\n  constructor(private http: HttpClient) { }\n  confirmationString:string = \"New product has been added\";\n  isAdded : boolean =false;\n  memberobj:object={};\n  getConfig() {\n    return this.http.get(this.configUrl);\n  };\n\n\n  addNewMember (member){\n    this.memberobj={\n      \"name\":member.name,\n      \"joindate\":member.joindate\n    }\n    return this.http.post(this.configUrl, this.memberobj, this.httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n\n\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserAnimationsModule,NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { \n  MatButtonModule,\n  MatSidenavModule,\n  MatExpansionModule,\n  MatCheckboxModule,\n  MatGridListModule,\n  MatFormFieldModule,\n  MatDialogModule,\n  MatTabsModule,\n  MatProgressSpinnerModule,\n  MatMenuModule,\n  MatIconModule,\n  MatInputModule,\n  MatSelectModule,\n  MatToolbarModule,\n  MatCardModule,\n  MatChipsModule,\n  MatListModule,\n  MatTooltipModule,\n  MatNativeDateModule,\n  MatDatepickerModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatSortModule,\n  MatSnackBarModule,\n  MatStepperModule\n  } from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n        MatSidenavModule,\n        MatExpansionModule,\n        NoopAnimationsModule,\n        MatButtonModule,\n        MatGridListModule,\n        MatCheckboxModule,\n        MatFormFieldModule,\n        MatDialogModule,\n        MatTabsModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatToolbarModule,\n        MatCardModule,\n        MatChipsModule,\n        MatListModule,\n        MatTooltipModule,\n        MatNativeDateModule,\n        MatDatepickerModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatSortModule,\n        MatSnackBarModule,\n        MatStepperModule\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    NoopAnimationsModule,\n    MatSidenavModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    MatIconModule,\n    MatInputModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatChipsModule,\n    MatListModule,\n    MatTooltipModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatSortModule,\n    MatSnackBarModule,\n    MatStepperModule\n    ],\n  declarations: []\n})\n\nexport class MaterialModule { }\n","module.exports = \"\"","module.exports = \"  <div class=\\\"container-fluid\\\">\\n      <app-header></app-header>\\n    </div>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading text-primary\\\"><h1>Javascript</h1></div>\\n            <div class=\\\"panel-body\\\">\\n                JavaScript is a lightweight, interpreted programming language. It is designed for creating \\n                network-centric applications. It is complimentary to and integrated with Java.\\n                 JavaScript is very easy to implement because it is integrated with HTML.\\n                 It is open and cross-platform.\\n            </div>\\n        </div>\\n        <div class=\\\"panel-group\\\">\\n          <div class=\\\"panel panel-default\\\">\\n              <div class=\\\"panel-heading text-primary\\\"><h1>HTML</h1></div>\\n              <div class=\\\"panel-body\\\">\\n                  HTML stands for Hyper Text Markup Language, which is the most widely\\n                   used language on Web to develop web pages. HTML was created by Berners-\\n                    in late 1991 but \\\"HTML 2.0\\\" was the first standard HTML specification \\n                     was published in 1995. HTML 4.01 was a major version of HTML and it was\\n                      published in late 1999. Though HTML 4.01 version is widely used but currently\\n                   we are having HTML-5 version which is an extension to HTML 4.01, and this \\n                    was published in 2012.\\n              </div>\\n          </div>\\n          <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading text-primary\\\"><h1>Angular</h1></div>\\n            <div class=\\\"panel-body\\\">\\n                Angular 4 is a JavaScript framework for building web applications and apps in JavaScript, html,\\n                and TypeScript, which is a superset of JavaScript. Angular provides built-in features for animation,\\n                http service, and materials which in turn has features such as auto-complete, navigation, toolbar,\\n                menus, etc.The code is written in TypeScript, which compiles to JavaScript and displays the same in\\n                the browser.\\n            </div>\\n          </div>\\n         \\n        </div>\\n      </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}